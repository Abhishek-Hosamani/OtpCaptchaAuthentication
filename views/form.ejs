<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Form</title>
    <!-- <link href='super_login.css' rel="stylesheet" type="text/css"> -->
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background: #03a9f4;
            transition: 0.5s;
        }

        body.active {
            background: rgb(200, 43, 43);
        }

        .container {
            position: relative;
            width: 800px;
            height: 500px;
            margin: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;

        }

        .bluebg {
            position: absolute;
            top: 40px;
            width: 100%;
            height: 420px;
            display: flex;
            justify-content: center;
            align-items: center;
            background: rgba(255, 255, 255, 0.2);
            box-shadow: 0 5px 45px rgba(0, 0, 0, 0.15);
        }

        .bluebg .box {
            position: relative;
            width: 50%;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            /* above line applies the flex in the column wise Direction . */
        }

        .bluebg .box h2 {
            color: #fff;
            font-size: 1.2em;
            font-weight: 500px;
            margin-bottom: 10px;
        }

        .bluebg .box button {
            cursor: pointer;
            padding: 10px 20px;
            background: #efff;
            color: #333;
            font-size: 1.2em;
            font-weight: 500;
            border: none;
        }

        .signInForm {
            background-color: #fff;
        }

        .formBx {
            /* position: absolute;
            top: 0;
            left: 0;
            width: 50%;
            height: 100%; */
            width: 50%;
            background: #fff;
            z-index: 1000;
            display: flex;
            justify-content: center;
            align-items: center;
            box-shadow: 0 5px 45px rgba(0, 0, 0, 0.25);
            transition: 1s ease-in-out;
            overflow: hidden;
            /*while sliding from the sign in to sign up inorder to avoid it at the left side .*/
        }

        /* whenever the active element is added into the classlist of the formBx element it is shifted with 50 percent  */
        .formBx.active {
            left: 50%;
        }

        .formBx .form {
            position: absolute;
            left: 0;
            width: 100%;
            padding: 50px;
            transition: 0.5s;
        }

        .formBx .form form {
            width: 100%;
            display: flex;
            flex-direction: column;
        }

        .formBx .form form h2 {
            font-size: 1.5em;
            color: #333;
            margin-bottom: 20px;
            font-weight: 500;
        }


        .formBx .form form input {
            width: 100%;
            margin-bottom: 20px;
            padding: 10px;
            outline: none;
        }

        /* whenever we click on the signIn active will be removed to the formBx So that sighnIn form will be at left :0 in the form (i.e at its actual position) */

        .formBx .signUpForm {
            left: 100%;
            /* whenever we click on the signUp active will be set up to the formBx So that sighnUp form will be at left :0 in the form (i.e at its actual position) */
        }

        .formBx.active .signUpForm {
            left: 0;
        }

        .formBx .form form input[type="submit"] {
            background: #03a9f4;
            border: none;
            color: #fff;
            max-width: 100px;
        }

        .formBx.active .signUpForm input[type="submit"] {
            background: rgb(220, 63, 63);
            border: none;
            color: #fff;
            max-width: 100px;
        }

        /* when the active element is added into the formBx element the signInForm will not slide along with the formBx It will be shifted by 100%  */
        /* that is signInForm remains in the same place if the active element is added to the formBx means also */

        .formBx.active .signInForm {
            left: -100%;
        }

        .formBx .signInForm {
            transition-delay: 0.25s;
        }

        .formBx .signUpForm {
            transition-delay: 0.25s;
        }


        @media(max-width:991px) {
            .container {
                max-width: 400px;
                height: 650px;
                display: flex;
                justify-content: center;
                align-items: center;
            }

            .container .bluebg {
                top: 0;
                height: 100%;
            }

            .formBx {
                width: 100%;
                height: 500px;
                top: 0;
                box-shadow: none;
                /* white boxes leaves 150px for sign in and sidn up buttons. */
            }

            .bluebg .box {
                position: absolute;
                width: 100%;
                height: 150px;
                bottom: 0;
            }

            .box.signin {
                top: 0px;
                /* sign in form is attached in the upward direction  */
            }

            .formBx.active {
                left: 0;
                top: 150px;
                /* formBx will move 150px downwards if this happens */
            }
        }
    </style>
</head>

<body>
    <div class="container">
        <!-- <div class="bluebg">
            <div class="box signin">
                <h2>Already have an account .</h2>
                <button class="signinBtn">Sign In</button>
            </div>
            <div class="box signUp">
                <h2>Don't have an account .</h2>
                <button class="signupBtn">Sign Up</button>
            </div>
        </div> -->
        <div class="formBx">
            <div class="form signInForm">
                <form action="/submitform" method="post">
                    <h2>Sign In </h2>
                    <div>
                        <input type="number" id="mobilenumber" placeholder="enter mobile number">
                        <button type="button" onclick="executeFunction()">GET OTP</button>
                    </div>

                    <input type="password" placeholder="enter the otp obtained">
                    <input type="captcha" placeholder="captcha">
                    <div>
                        <img class="generated-captcha" id="captcha" src="<%= image %>" alt="Generated Captcha"
                            width="100" height="50">
                        <button type="button" onclick="refreshcaptcha()">refresh </button>
                    </div>
                    <input type="submit" value="login">
                    <!-- <a href="#" class="forget">Forget Password</a> -->
                </form onsubmit="submitform(e)">
            </div>
            <!-- 
            <div class="form signUpForm">
                <form>
                    <h2>Sign In </h2>
                    <input type="text" placeholder="UserName">
                    <input type="email" placeholder="email ">
                    <input type="password" placeholder="PassWord">
                    <input type="password" placeholder="Confirm yourPassWord">
                    <input type="submit" value="Register">
                </form>
            </div> -->
        </div>
    </div>
</body>


<script>
    function executeFunction() {

        let mobile = document.getElementById('mobilenumber').value;
        var url = `https://localhost:3443/getotp?mobileNumber=${mobile}`
        try {
            const response = fetch(url);
            if (response.ok) {
                // If the response is successful, parse the JSON data
                const data = response.json();
                console.log('Server response:', data);
                // Handle the server response as needed
            } else {
                console.error('Server returned an error:', response.status);
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }

    async function refreshcaptcha() {
        var captcha = document.getElementById('captcha');

        const response = await fetch('https://localhost:3443/getcaptcha')
        console.log(response);
        captcha.src = `${await response.text()}`
    }


    async function submitform(e) {
        console.log('SUbmitt')
        e.preventDefault();

    }
</script>

</html>